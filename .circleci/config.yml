version: 2.1

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.8.9
    steps:
      - checkout
      - run:
          name: Create test reports directory
          command: mkdir /tmp/test-artifacts
      - run:
          name: Install dependencies
          command: pipenv sync --dev
      - run:
          name: Run Flake8 checks
          command: pipenv run flake8
      - run:
          name: Setup Code Climate test-reporter
          command: |
              # download test reporter as a static binary
              curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
              chmod +x ./cc-test-reporter
              ./cc-test-reporter before-build
      - run:
          name: Running Tests
          command: pipenv run coverage run manage.py test && pipenv run coverage xml && pipenv run coverage report -m
      - run:
          name: Update CodeClimate coverage report
          command: |
              ./cc-test-reporter after-build --exit-code $?
  build-and-upload-image:
    docker:
      - image: docker:20.10.14-git
    environment:
      APP_NAME: edagames-django
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache py3-pip
            pip install awscli
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/${APP_NAME}.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/${APP_NAME}.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=${APP_NAME} -t ${APP_NAME} .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/${APP_NAME}.tar ${APP_NAME}
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/${APP_NAME}.tar
      - deploy:
          name: Push application Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              aws ecr-public get-login-password --region us-east-1 \
                | docker login --username AWS --password-stdin ${ECR_REGISTRY}
              docker tag app "${ECR_REGISTRY}/${APP_NAME}:${CIRCLE_SHA1}"
              docker push "${ECR_REGISTRY}/${APP_NAME}:${CIRCLE_SHA1}"
              docker tag app "${ECR_REGISTRY}/${APP_NAME}:latest"
              docker push "${ECR_REGISTRY}/${APP_NAME}:latest"
            fi
  trigger-main-repo-update:
    docker:
      - image: curlimages/curl
    steps:
      - run:
          name: Update main repo
          command: |
            curl \
            -X POST \
            -H "Authorization: token $MACHINEUSER_GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/evbeda/edagames/dispatches \
            -d '{"event_type":"update_django"}'

workflows:
  main:
    jobs:
      - build-and-test
      - build-and-upload-image:
          requires:
            - build-and-test
          context:
            - 'edagames-aws'
            - 'edagames'
      - trigger-main-repo-update:
          requires:
            - build-and-test
          filters:
            branches:
              only: main
          context:
            - 'edagames'
