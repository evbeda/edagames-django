from unittest.mock import patch

from django.test import TestCase

from development.common.match_result_text import generate_text_str


class TestMatchResultText(TestCase):

    sample_log_1 = {
        "action": "SHOOT",
        "data": {
            "from_row": "8",
            "from_col": "0",
            "direction": "NORTH",
            "game_id": "77491184-4bbf-11ed-9308-0242ac120005",
            "turn_token": "d2ab9417-6301-430b-b536-8d6b6be5e21b",
        },
        "current_player": "player1"
    }

    sample_log_2 = {
        'side': 'R',
        'from_row': '8',
        'player_2': 'guiojeda@gmail.com',
        'arrows_1': '5',
        'board': (
            '############################################################' +
            '####################  R  ###################################' +
            '############################################################' +
            '############################################################' +
            '############################################################' +
            '############################################################' +
            '############################################################' +
            '############################################################' +
            '############################################################' +
            '#########################################################F##' +
            '############################################################' +
            '############################################################' +
            '########################################  R  ###############' +
            '############################################################' +
            '############################################################' +
            '############################################################' +
            '############################################################' +
            '############################################################' +
            '############################################################' +
            '############################################################' +
            '############################################################' +
            '############################################################' +
            '############################################################' +
            '############################################################' +
            '  R  '
        ),
        'score_1': '1000',
        'remaining_turns': '199',
        'state': 'valid',
        'from_col': '0',
        'game_id': '77491184-4bbf-11ed-9308-0242ac120005',
        'direction': 'NORTH',
        'arrows_2': '6',
        'player_1': 'VirtualEnv',
        'score_2': '0',
        'current_player': 'player2'
    }

    sample_answer = (
        'Document start\n\n' +
        '---------------------------- Player Command -------------------------------------\n' +
        'Action: SHOOT\n' +
        'Coordinates: 8, 0\n' +
        'Direction: NORTH\n\n' +
        '--------------- Resulting Discovered Board after Player Command ------------------\n' +
        'Player 1 Score: 1000\n' +
        'Player 2 Score: 0\n' +
        'Player 1 Name: VirtualEnv\n' +
        'Player 2 Name: guiojeda@gmail.com\n' +
        'Remaining turns: 199\n' +
        'Last command coords: 8, 0\n' +
        'Last command direction: NORTH\n' +
        'Board as seen by not-active player:\n\n' +
        '################################################################################  R  \n' +
        '#####################################################################################\n' +
        '#####################################################################################\n' +
        '#####################################################################################\n' +
        '#####################################################################################\n' +
        '#####################################################################################\n' +
        '#####################################################################################\n' +
        '##F##################################################################################\n' +
        '################################################################################  R  \n' +
        '#####################################################################################\n' +
        '#####################################################################################\n' +
        '#####################################################################################\n' +
        '#####################################################################################\n' +
        '#####################################################################################\n' +
        '#####################################################################################\n' +
        '#####################################################################################\n' +
        '################################################################################  R  \n' +
        '\n\n'
    )

    @patch('json.loads')
    def test_generate_text_should_return_corresponding_text(
        self,
        mocked_json_loads,
    ):
        mocked_json_loads.return_value = {
            "from_row": "8",
            "from_col": "0",
            "direction": "NORTH",
            "game_id": "77491184-4bbf-11ed-9308-0242ac120005",
            "turn_token": "d2ab9417-6301-430b-b536-8d6b6be5e21b",
        }
        sample_data = [self.sample_log_1, self.sample_log_2]
        answer = generate_text_str(sample_data)
        self.assertEqual(answer, self.sample_answer)
